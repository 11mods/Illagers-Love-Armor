plugins {
    id 'fabric-loom' version '1.6-SNAPSHOT'
}

version =  property("mod.version") + "+" + stonecutter.current.version
group = "dev.imb11"

base {
    archivesName = property("mod.name")
}

repositories {
    maven { url 'https://maven.mineblock11.dev/releases'}
    maven { url "https://jitpack.io/" }
    maven { url "https://storage.googleapis.com/devan-maven/" }
    maven { url 'https://maven.wispforest.io' }
    maven { url 'https://maven.imb11.dev/releases'}
    maven { url "https://server.bbkr.space/artifactory/libs-release" }
    maven {
        url "https://maven.draylar.dev/releases"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${stonecutter.current.version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${property("deps.fabric_loader")}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${property("deps.fabric_api")}"
}

if(stonecutter.current.active) {
    loom {
        runConfigs.all {
            ideConfigGenerated = true // generate IDE tasks for running client, server and testmod, datagen if those are present
            runDir "../../run" // use a global run directory for all versions
        }
    }
}

loom {
    accessWidenerPath = getRootProject().file("src/main/resources/aw/" + stonecutter.current.version + ".accesswidener")
}

processResources {
    filesMatching('fabric.mod.json') {
        expand 'mod_version': version,
                'target_minecraft': project.property('mod.target'),
                'minecraft_version': stonecutter.current.version
    }
}

java {
    var version = (stonecutter.current.version > "1.20.4") ? JavaVersion.VERSION_21 : JavaVersion.VERSION_17
    sourceCompatibility = version
    targetCompatibility = version
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}"}
    }
}